// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.DB;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(TherapistDbContext))]
    [Migration("20221216081718_Therapist")]
    partial class Therapist
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("back_end.Models.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TherapistId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TherapistId");

                    b.ToTable("Calendars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d129c0e0-d31f-4faa-b002-46ec391489cb"),
                            TherapistId = new Guid("ad6902ac-42f2-46bf-a8fd-0694996a7e3b")
                        },
                        new
                        {
                            Id = new Guid("555b4338-4725-4341-8fa2-57d0be5c4eb5"),
                            TherapistId = new Guid("1dfdd8cf-568d-4460-aa76-d244228b7af6")
                        },
                        new
                        {
                            Id = new Guid("f8f6aae0-034f-48fb-924f-37b4cea6f4d9"),
                            TherapistId = new Guid("044d4cbb-b7b0-4279-aee1-e5fae3d48747")
                        },
                        new
                        {
                            Id = new Guid("89488d05-18cc-4315-9c4f-155a98c2fc7c"),
                            TherapistId = new Guid("7d1c2950-2205-4a51-bfee-86eb0ae73ad2")
                        },
                        new
                        {
                            Id = new Guid("1b69586e-fa28-4260-bef6-28188d25f6df"),
                            TherapistId = new Guid("fa2efa4a-bbd4-4b8c-a0cf-0fc249db5e5c")
                        });
                });

            modelBuilder.Entity("back_end.Models.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.ToTable("Records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0d0a445-15be-46e3-887f-39c736af60b8"),
                            CalendarId = new Guid("d129c0e0-d31f-4faa-b002-46ec391489cb"),
                            Frequency = 4,
                            Text = "Broken leg",
                            VisitTime = new DateTime(2022, 12, 11, 10, 17, 18, 315, DateTimeKind.Local).AddTicks(1906)
                        },
                        new
                        {
                            Id = new Guid("07e611ba-4ae1-4935-8870-9777ed2d41ca"),
                            CalendarId = new Guid("555b4338-4725-4341-8fa2-57d0be5c4eb5"),
                            Frequency = 2,
                            Text = "Tooth pain",
                            VisitTime = new DateTime(2022, 12, 13, 10, 17, 18, 315, DateTimeKind.Local).AddTicks(1947)
                        },
                        new
                        {
                            Id = new Guid("19917699-7403-4c7f-b141-3430d0fab7c4"),
                            CalendarId = new Guid("f8f6aae0-034f-48fb-924f-37b4cea6f4d9"),
                            Frequency = 1,
                            Text = "Pain in foot",
                            VisitTime = new DateTime(2022, 12, 15, 10, 17, 18, 315, DateTimeKind.Local).AddTicks(1950)
                        },
                        new
                        {
                            Id = new Guid("b08ee792-92ae-4a77-ac8a-80d618a90389"),
                            CalendarId = new Guid("89488d05-18cc-4315-9c4f-155a98c2fc7c"),
                            Frequency = 5,
                            Text = "Groin pain",
                            VisitTime = new DateTime(2022, 12, 15, 10, 17, 18, 315, DateTimeKind.Local).AddTicks(1956)
                        },
                        new
                        {
                            Id = new Guid("47dc833f-f177-40c8-93df-f9efaf96c27c"),
                            CalendarId = new Guid("1b69586e-fa28-4260-bef6-28188d25f6df"),
                            Frequency = 2,
                            Text = "Broken hand",
                            VisitTime = new DateTime(2022, 12, 15, 10, 17, 18, 315, DateTimeKind.Local).AddTicks(1959)
                        });
                });

            modelBuilder.Entity("back_end.Models.Therapist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptionRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Therapists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad6902ac-42f2-46bf-a8fd-0694996a7e3b"),
                            CanEdit = false,
                            Name = "Vitalii",
                            ReceptionRoom = "Traumatology",
                            Surname = "Horbovyi"
                        },
                        new
                        {
                            Id = new Guid("1dfdd8cf-568d-4460-aa76-d244228b7af6"),
                            CanEdit = false,
                            Name = "Taras",
                            ReceptionRoom = "Dentistry",
                            Surname = "Topolya"
                        },
                        new
                        {
                            Id = new Guid("044d4cbb-b7b0-4279-aee1-e5fae3d48747"),
                            CanEdit = false,
                            Name = "Ostap",
                            ReceptionRoom = "Orthopedics",
                            Surname = "Hovda"
                        },
                        new
                        {
                            Id = new Guid("7d1c2950-2205-4a51-bfee-86eb0ae73ad2"),
                            CanEdit = false,
                            Name = "Oksana",
                            ReceptionRoom = "Urology",
                            Surname = "Dohubets"
                        },
                        new
                        {
                            Id = new Guid("fa2efa4a-bbd4-4b8c-a0cf-0fc249db5e5c"),
                            CanEdit = false,
                            Name = "John",
                            ReceptionRoom = "Traumatology",
                            Surname = "Hams"
                        });
                });

            modelBuilder.Entity("back_end.Models.Calendar", b =>
                {
                    b.HasOne("back_end.Models.Therapist", "Therapist")
                        .WithMany()
                        .HasForeignKey("TherapistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("back_end.Models.Record", b =>
                {
                    b.HasOne("back_end.Models.Calendar", null)
                        .WithMany("Records")
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back_end.Models.Calendar", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
